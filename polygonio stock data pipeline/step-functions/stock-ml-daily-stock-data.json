{
  "Comment": "Daily Stock Data using Polygon APIs",
  "StartAt": "CheckMarketOpen",
  "States": {
    "CheckMarketOpen": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-2:913902556403:function:stock-ml-check-market-open",
        "Payload.$": "$"
      },
      "Next": "GetTickerAPI",
      "ResultPath": null
    },
    "GetTickerAPI": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-2:913902556403:function:stock-ml-get-ticker-api:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "GetTickerSeries",
      "ResultPath": null
    },
    "GetTickerSeries": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-2:913902556403:function:stock-ml-get-ticker-series:$LATEST"
      },
      "Next": "Map",
      "ResultPath": "$.GetTickerSeries",
      "ResultSelector": {
        "tickers.$": "$.Payload.tickers"
      }
    },
    "Map": {
      "Type": "Map",
      "Iterator": {
        "StartAt": "MapState 1",
        "States": {
          "MapState 1": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-east-2:913902556403:function:stock-ml-map-state:$LATEST",
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "End": true,
      "MaxConcurrency": 8,
      "ItemsPath": "$.GetTickerSeries.tickers",
      "Parameters": {
        "tickers.$": "$$.Map.Item.Value",
        "exchange.$": "$.exchange",
        "date.$": "$.date"
      }
    }
  }
}
